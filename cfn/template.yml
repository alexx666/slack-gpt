AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: SlackGPT

# Metadata:
#   template metadata

Parameters:
  Project:
    Type: String
    Default: SlackGPT

  Environment:
    Type: String
    Default: dev

  SlackToken:
    Type: String

  OpenAIToken:
    Type: String

  OpenAIModel:
    Type: String
    Default: gpt-3.5-turbo

  OpenAISystemContent:
    Type: String
    Default: You are SlackGPT, a sarcastic and witty, but still useful bot

  Version:
    Type: String
    Default: v1

# Mappings:
#   set of mappings

# Conditions:
#   set of conditions

Resources:

  Api:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger.yml
      DisableExecuteApiEndpoint: false
      FailOnWarnings: false
      StageName: !Ref Version
      Tags:
        Project: !Ref Project
        Environment: !Ref Environment

  RequestCache:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: requestId
        Type: String  
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
      TableName: !Sub ${AWS::StackName}-cache
      Tags:
        Project: !Ref Project
        Environment: !Ref Environment

  ApiRequestHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-request
      Timeout: 30
      CodeUri: src/
      MemorySize: 2048
      Runtime: nodejs18.x
      Handler: api-lambda.handler
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonSQSFullAccess
      Environment:
        Variables:
          DYNAMO_REQUEST_CACHE_TABLE: !Ref RequestCache
          SQS_QUEUE_URL: !Ref SlackGPTQueue
          # NODE_OPTIONS: --enable-source-maps
      Events:
        PostMessages:
          Type: HttpApi
          Properties:
            ApiId: !Ref Api
            Path: /messages
            Method: POST
            PayloadFormatVersion: "2.0"
            TimeoutInMillis: 29000
      Tags:
        Project: !Ref Project
        Environment: !Ref Environment
    Metadata:
      BuildMethod: esbuild

  ApiRequestHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ApiRequestHandler}
      RetentionInDays: 14
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment

  SlackGPTHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-handler
      Timeout: 900
      CodeUri: src/
      MemorySize: 2048
      Runtime: nodejs18.x
      Handler: bot-lambda.handler
      Environment:
        Variables:
          SLACK_TOKEN: !Ref SlackToken
          OPENAI_API_KEY: !Ref OpenAIToken
          OPENAI_MODEL: !Ref OpenAIModel
          OPENAI_SYSTEM_CONTENT: !Ref OpenAISystemContent
          # NODE_OPTIONS: --enable-source-maps
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 10
            Enabled: true
            MaximumBatchingWindowInSeconds: 2
            Queue:  !GetAtt SlackGPTQueue.Arn
      Tags:
        Project: !Ref Project
        Environment: !Ref Environment
    Metadata:
      BuildMethod: esbuild

  SlackGPTHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${SlackGPTHandler}
      RetentionInDays: 14
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment

  SlackGPTQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-queue
      VisibilityTimeout: 900
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment

  SlackGPTQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2008-10-17
        Id: PublicationPolicy
        Statement:
          - Sid: Allow-SendMessage
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource: "*"
      Queues:
        - !Ref SlackGPTQueue

Outputs:
  SlackRequestUrl:
    Description: Slack Request URL
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${Version}/messages